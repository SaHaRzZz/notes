{"version":3,"sources":["components/MainPage.js","logo.svg","redux/general/types.js","redux/general/actions.js","imgs/loading.svg","components/Online.js","redux/general/reducer.js","redux/store.js","App.js","reportWebVitals.js","index.js"],"names":["updatingNotes","SET_CONNECTED","SET_LOADING","SET_NOTES","connect","state","notes","general","dispatch","setNotes","val","type","payload","props","noteList","useState","rerender","setRerender","useEffect","localStorage","getItem","tempNotes","console","log","Object","values","decode","JSON","parse","setItem","stringify","encode","document","getElementsByName","length","scrollIntoView","behavior","className","onClick","map","note","editMode","push","title","body","tempTitle","addNote","index","name","style","width","fontSize","defaultValue","onChange","e","note2","index2","target","value","tempBody","whiteSpace","undefined","setIsConnected","setIsLoading","isLoading","src","loadingSvg","icon","isOnline","faSignal","faSync","size","initialState","isConnected","reducer","action","rootReducer","combineReducers","generalReducer","store","createStore","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.7d6e5edf.chunk.js","sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport {connect} from'react-redux';\r\nimport {encode, decode} from 'js-base64';\r\n\r\nimport {setNotes} from '../redux/';\r\n\r\nlet updatingNotes;\r\n\r\nconst generateNote = (noteList, setNotes) => {\r\n    const output = noteList.map((note, index) =>\r\n        <tr>\r\n            <td>\r\n                <div name={`card${index}`} className=\"card\" style={{ width: '18rem' }}>\r\n                    <div className=\"card-body\">\r\n                        {note.editMode ? [\r\n                            <input className=\"text-center\" style={{fontSize: '19px'}} defaultValue={note.title} onChange={e => setNotes(noteList.map((note2, index2) => index2 == index ? {...note2, tempTitle: e.target.value} : note2 ))}/>,\r\n                            <textarea className=\"text-center\" defaultValue={note.body} onChange={e => setNotes(noteList.map((note2, index2) => index2 == index ? {...note2, tempBody: e.target.value} : note2 ))}></textarea>]\r\n                            : [\r\n                            <h5 className=\"card-title\">{note.title}</h5>,\r\n                            <p className=\"card-text\" style={{whiteSpace: 'pre-wrap'}}>{note.body}</p>]\r\n                        }\r\n                        <div className=\"row justify-content-between\">\r\n                            {note.editMode ? [\r\n                                <a className=\"btn btn-primary\" style={{width: '40%'}} onClick={() => setNotes(noteList.map((note2, index2) => index2 == index ? {...note2, title: note2.tempTitle, body: note2.tempBody, editMode: false} : note2 ))}>Save</a>,\r\n                                <a className=\"btn btn-danger\" style={{width: '40%'}} onClick={() => setNotes(noteList.map((note2, index2) => index2 == index ? {...note2, editMode: false} : note2 ))}>Cancel</a>]\r\n                                : [\r\n                                <a className=\"btn btn-primary\" style={{width: '40%'}} onClick={() => setNotes(noteList.map((note2, index2) => index2 == index ? {...note2, tempTitle: note2.title, tempBody: note2.body, editMode: true} : {...note2, title: note2.tempTitle != undefined ? note2.tempTitle : note2.title, body: note2.tempBody != undefined ? note2.tempBody : note2.body, editMode: false} ))}>Edit</a>,\r\n                                <a className=\"btn btn-danger\" style={{width: '40%'}}>Delete</a>]\r\n                            }\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </td>\r\n        </tr>\r\n    )\r\n    return output;\r\n}\r\n\r\nconst addNote = (notes, setNotes, setRerender, rerender) => {\r\n    notes = notes.map(note => {return {...note, editMode: false}});\r\n    notes.push({title: 'New note', body: '', tempTitle: 'New note', editMode: true})\r\n    setRerender(!rerender);\r\n    setNotes(notes);\r\n}\r\n\r\nfunction MainPage(props) {\r\n    const [rerender, setRerender] = useState(false);\r\n    useEffect(() => {\r\n        if(localStorage.getItem('snotes-notes')) {\r\n            let tempNotes = localStorage.getItem('snotes-notes');\r\n            console.log('first:', Object.values(tempNotes));\r\n            tempNotes = decode(tempNotes);\r\n            tempNotes = JSON.parse(tempNotes);\r\n            props.setNotes(tempNotes);\r\n        } else {\r\n            localStorage.setItem('snotes-notes', '+exװ^nrN+exװ^yح2^')\r\n            console.log('this');\r\n        }\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        updatingNotes = JSON.stringify(props.notes);\r\n        updatingNotes = encode(updatingNotes);\r\n        localStorage.setItem('snotes-notes', updatingNotes);\r\n        console.log('set');\r\n    });\r\n\r\n    useEffect(() => {\r\n        try {\r\n            document.getElementsByName(`card${props.notes.length-1}`)[0].scrollIntoView({behavior: 'smooth'})\r\n        }\r\n        catch {\r\n\r\n        }\r\n    }, [rerender]);\r\n    \r\n    return (\r\n        <div className=\"text-center\">\r\n            <div className=\"btn btn-info my-2\" onClick={() => addNote(props.notes, props.setNotes, setRerender, rerender)}>New note</div>\r\n            <table className=\"m-0 table justify-content-center row\">\r\n                {generateNote(props.notes, props.setNotes)}\r\n            </table>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        notes: state.general.notes\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        setNotes: val => dispatch(setNotes(val))\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(MainPage);","export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","export const SET_CONNECTED = 'SET_CONNECTED';\r\nexport const SET_LOADING = 'SET_LOADING';\r\nexport const SET_NOTES = 'SET_NOTES';","import {SET_CONNECTED, SET_LOADING, SET_NOTES} from './types';\r\n\r\nexport const setIsConnected = bool => {\r\n    return {\r\n        type: SET_CONNECTED,\r\n        payload: bool\r\n    }\r\n}\r\n\r\nexport const setIsLoading = bool => {\r\n    return {\r\n        type: SET_LOADING,\r\n        payload: bool\r\n    }\r\n}\r\n\r\nexport const setNotes = notes => {\r\n    return {\r\n        type: SET_NOTES,\r\n        payload: notes\r\n    }\r\n}","export default __webpack_public_path__ + \"static/media/loading.3bdc9192.svg\";","import React, { useEffect } from 'react';\r\nimport {connect} from 'react-redux';\r\nimport {setIsConnected, setIsLoading} from '../redux/';\r\nimport axios from 'axios';\r\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome';\r\nimport {faSync, faSignal} from '@fortawesome/free-solid-svg-icons';\r\n\r\nimport loadingSvg from '../imgs/loading.svg';\r\n\r\nconst startOnline = (setIsLoading, setIsConnected) => {\r\n    setIsLoading(true);\r\n    //axios call\r\n}\r\n\r\nfunction Online(props) {\r\n    useEffect(() => startOnline(props.setIsLoading, props.setIsConnected) ,[]);\r\n    return (\r\n        <div>\r\n            {props.general.isLoading ? <img src={loadingSvg}/> : <FontAwesomeIcon icon={props.isOnline ? faSignal : faSync} size='2x'/> }\r\n            <hr/>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        general: state.general\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        setIsConnected: val => dispatch(setIsConnected(val)),\r\n        setIsLoading: val => dispatch(setIsLoading(val))\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Online);","import {SET_CONNECTED, SET_LOADING, SET_NOTES} from './types';\r\n\r\nconst initialState = {\r\n    isConnected: false,\r\n    isLoading: true,\r\n    notes: [\r\n    ]\r\n}\r\n\r\nconst reducer = (state = initialState, action) => {\r\n    switch(action.type) {\r\n        case SET_CONNECTED: return {\r\n            ...state,\r\n            isConnected: action.payload\r\n        }\r\n        case SET_LOADING: return {\r\n            ...state,\r\n            isLoading: action.payload\r\n        }\r\n        case SET_NOTES: return {\r\n            ...state,\r\n            notes: action.payload\r\n        }\r\n        default: return state;\r\n    }\r\n}\r\n\r\nexport default reducer;","import {createStore, combineReducers} from 'redux';\r\n\r\nimport generalReducer from './general/reducer';\r\n\r\nconst rootReducer = combineReducers({general: generalReducer});\r\n\r\nconst store = createStore(rootReducer);\r\n\r\nexport default store;","import logo from './logo.svg';\nimport MainPage from './components/MainPage';\nimport Online from './components/Online';\nimport {Provider} from 'react-redux';\n\nimport store from './redux/store';\n\nfunction App() {\n  return (\n    <div>\n      <Provider store={store}>\n        {/* <Online/> */}\n        <MainPage/>\n      </Provider>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport '../node_modules/bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}