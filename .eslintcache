[{"D:\\react\\projects\\notes\\src\\index.js":"1","D:\\react\\projects\\notes\\src\\App.js":"2","D:\\react\\projects\\notes\\src\\reportWebVitals.js":"3","D:\\react\\projects\\notes\\src\\components\\MainPage.js":"4","D:\\react\\projects\\notes\\src\\components\\Online.js":"5","D:\\react\\projects\\notes\\src\\redux\\index.js":"6","D:\\react\\projects\\notes\\src\\redux\\general\\actions.js":"7","D:\\react\\projects\\notes\\src\\redux\\general\\types.js":"8","D:\\react\\projects\\notes\\src\\redux\\store.js":"9","D:\\react\\projects\\notes\\src\\redux\\general\\reducer.js":"10"},{"size":563,"mtime":1611660619132,"results":"11","hashOfConfig":"12"},{"size":366,"mtime":1611660657349,"results":"13","hashOfConfig":"12"},{"size":362,"mtime":499162500000,"results":"14","hashOfConfig":"12"},{"size":4666,"mtime":1611746201148,"results":"15","hashOfConfig":"12"},{"size":1129,"mtime":1611656400076,"results":"16","hashOfConfig":"12"},{"size":73,"mtime":1611662825934,"results":"17","hashOfConfig":"12"},{"size":410,"mtime":1611662690929,"results":"18","hashOfConfig":"12"},{"size":127,"mtime":1611662673129,"results":"19","hashOfConfig":"12"},{"size":237,"mtime":1611654997232,"results":"20","hashOfConfig":"12"},{"size":635,"mtime":1611681481656,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"87smfo",{"filePath":"25","messages":"26","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27","usedDeprecatedRules":"24"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32","usedDeprecatedRules":"24"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"24"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"D:\\react\\projects\\notes\\src\\index.js",[],["46","47"],"D:\\react\\projects\\notes\\src\\App.js",["48","49"],"import logo from './logo.svg';\nimport MainPage from './components/MainPage';\nimport Online from './components/Online';\nimport {Provider} from 'react-redux';\n\nimport store from './redux/store';\n\nfunction App() {\n  return (\n    <div>\n      <Provider store={store}>\n        {/* <Online/> */}\n        <MainPage/>\n      </Provider>\n    </div>\n  );\n}\n\nexport default App;\n","D:\\react\\projects\\notes\\src\\reportWebVitals.js",[],"D:\\react\\projects\\notes\\src\\components\\MainPage.js",["50","51","52","53","54","55","56","57","58","59","60","61","62"],"import React, { useEffect, useState } from 'react';\r\nimport {connect} from'react-redux';\r\nimport {encode, decode} from 'js-base64';\r\n\r\nimport {setNotes} from '../redux/';\r\n\r\nlet updatingNotes;\r\n\r\nconst generateNote = (noteList, setNotes, setRerender, rerender) => {\r\n    const output = noteList.map((note, index) =>\r\n        <tr>\r\n            <td>\r\n                <div name={`card${index}`} className=\"card\" style={{ width: '18rem' }}>\r\n                    <div className=\"card-body\">\r\n                        {note.editMode ? [\r\n                            <input className=\"text-center\" style={{fontSize: '19px'}} defaultValue={note.title} onChange={e => setNotes(noteList.map((note2, index2) => index2 == index ? {...note2, tempTitle: e.target.value} : note2 ))}/>,\r\n                            <textarea className=\"text-center\" defaultValue={note.body} onChange={e => setNotes(noteList.map((note2, index2) => index2 == index ? {...note2, tempBody: e.target.value} : note2 ))}></textarea>]\r\n                            : [\r\n                            <h5 className=\"card-title\">{note.title}</h5>,\r\n                            <p className=\"card-text\" style={{whiteSpace: 'pre-wrap'}}>{note.body}</p>]\r\n                        }\r\n                        <div className=\"row justify-content-between\">\r\n                            {note.editMode ? [\r\n                                <a className=\"btn btn-primary\" style={{width: '40%'}} onClick={() => setNotes(noteList.map((note2, index2) => index2 == index ? {...note2, title: note2.tempTitle, body: note2.tempBody, editMode: false} : note2 ))}>Save</a>,\r\n                                <a className=\"btn btn-danger\" style={{width: '40%'}} onClick={() => setNotes(noteList.map((note2, index2) => index2 == index ? {...note2, editMode: false} : note2 ))}>Cancel</a>]\r\n                                : [\r\n                                <a className=\"btn btn-primary\" style={{width: '40%'}} onClick={() => setNotes(noteList.map((note2, index2) => index2 == index ? {...note2, tempTitle: note2.title, tempBody: note2.body, editMode: true} : {...note2, title: note2.tempTitle != undefined ? note2.tempTitle : note2.title, body: note2.tempBody != undefined ? note2.tempBody : note2.body, editMode: false} ))}>Edit</a>,\r\n                                <a className=\"btn btn-danger\" style={{width: '40%'}} onClick={() => [noteList.splice(index, 1), setNotes(noteList), setRerender(!rerender)]}>Delete</a>]\r\n                            }\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </td>\r\n        </tr>\r\n    )\r\n    return output;\r\n}\r\n\r\nconst addNote = (notes, setNotes, setRerender, rerender) => {\r\n    notes = notes.map(note => note.editMode ? {...note, title: note.tempTitle, body: note.tempBody, editMode: false} : note);\r\n    notes.push({title: 'New note', body: '', tempTitle: 'New note', editMode: true})\r\n    setRerender(!rerender);\r\n    setNotes(notes);\r\n}\r\n\r\nfunction MainPage(props) {\r\n    const [rerender, setRerender] = useState(false);\r\n    useEffect(() => {\r\n        if(localStorage.getItem('snotes-notes')) {\r\n            let tempNotes = localStorage.getItem('snotes-notes');\r\n            console.log('first:', Object.values(tempNotes));\r\n            tempNotes = decode(tempNotes);\r\n            tempNotes = JSON.parse(tempNotes);\r\n            props.setNotes(tempNotes);\r\n        } else {\r\n            localStorage.setItem('snotes-notes', '+exװ^nrN+exװ^yح2^')\r\n            console.log('this');\r\n        }\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        updatingNotes = JSON.stringify(props.notes);\r\n        updatingNotes = encode(updatingNotes);\r\n        localStorage.setItem('snotes-notes', updatingNotes);\r\n        console.log('set');\r\n    });\r\n\r\n    useEffect(() => {\r\n        try {\r\n            document.getElementsByName(`card${props.notes.length-1}`)[0].scrollIntoView({behavior: 'smooth'})\r\n        }\r\n        catch {\r\n\r\n        }\r\n    }, [rerender]);\r\n    \r\n    return (\r\n        <div className=\"text-center\">\r\n            <div className=\"btn btn-info my-2\" onClick={() => addNote(props.notes, props.setNotes, setRerender, rerender)}>New note</div>\r\n            <table className=\"m-0 table justify-content-center row\">\r\n                {generateNote(props.notes, props.setNotes, setRerender, rerender)}\r\n            </table>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        notes: state.general.notes\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        setNotes: val => dispatch(setNotes(val))\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(MainPage);","D:\\react\\projects\\notes\\src\\components\\Online.js",["63","64","65"],"import React, { useEffect } from 'react';\r\nimport {connect} from 'react-redux';\r\nimport {setIsConnected, setIsLoading} from '../redux/';\r\nimport axios from 'axios';\r\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome';\r\nimport {faSync, faSignal} from '@fortawesome/free-solid-svg-icons';\r\n\r\nimport loadingSvg from '../imgs/loading.svg';\r\n\r\nconst startOnline = (setIsLoading, setIsConnected) => {\r\n    setIsLoading(true);\r\n    //axios call\r\n}\r\n\r\nfunction Online(props) {\r\n    useEffect(() => startOnline(props.setIsLoading, props.setIsConnected) ,[]);\r\n    return (\r\n        <div>\r\n            {props.general.isLoading ? <img src={loadingSvg}/> : <FontAwesomeIcon icon={props.isOnline ? faSignal : faSync} size='2x'/> }\r\n            <hr/>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        general: state.general\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        setIsConnected: val => dispatch(setIsConnected(val)),\r\n        setIsLoading: val => dispatch(setIsLoading(val))\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Online);","D:\\react\\projects\\notes\\src\\redux\\index.js",[],"D:\\react\\projects\\notes\\src\\redux\\general\\actions.js",[],"D:\\react\\projects\\notes\\src\\redux\\general\\types.js",[],"D:\\react\\projects\\notes\\src\\redux\\store.js",[],"D:\\react\\projects\\notes\\src\\redux\\general\\reducer.js",[],{"ruleId":"66","replacedBy":"67"},{"ruleId":"68","replacedBy":"69"},{"ruleId":"70","severity":1,"message":"71","line":1,"column":8,"nodeType":"72","messageId":"73","endLine":1,"endColumn":12},{"ruleId":"70","severity":1,"message":"74","line":3,"column":8,"nodeType":"72","messageId":"73","endLine":3,"endColumn":14},{"ruleId":"75","severity":1,"message":"76","line":16,"column":176,"nodeType":"77","messageId":"78","endLine":16,"endColumn":178},{"ruleId":"75","severity":1,"message":"76","line":17,"column":151,"nodeType":"77","messageId":"78","endLine":17,"endColumn":153},{"ruleId":"79","severity":1,"message":"80","line":24,"column":33,"nodeType":"81","endLine":24,"endColumn":247},{"ruleId":"75","severity":1,"message":"76","line":24,"column":150,"nodeType":"77","messageId":"78","endLine":24,"endColumn":152},{"ruleId":"79","severity":1,"message":"80","line":25,"column":33,"nodeType":"81","endLine":25,"endColumn":200},{"ruleId":"75","severity":1,"message":"76","line":25,"column":149,"nodeType":"77","messageId":"78","endLine":25,"endColumn":151},{"ruleId":"79","severity":1,"message":"80","line":27,"column":33,"nodeType":"81","endLine":27,"endColumn":402},{"ruleId":"75","severity":1,"message":"76","line":27,"column":150,"nodeType":"77","messageId":"78","endLine":27,"endColumn":152},{"ruleId":"75","severity":1,"message":"82","line":27,"column":270,"nodeType":"77","messageId":"78","endLine":27,"endColumn":272},{"ruleId":"75","severity":1,"message":"82","line":27,"column":337,"nodeType":"77","messageId":"78","endLine":27,"endColumn":339},{"ruleId":"79","severity":1,"message":"80","line":28,"column":33,"nodeType":"81","endLine":28,"endColumn":174},{"ruleId":"83","severity":1,"message":"84","line":59,"column":8,"nodeType":"85","endLine":59,"endColumn":10,"suggestions":"86"},{"ruleId":"83","severity":1,"message":"87","line":75,"column":8,"nodeType":"85","endLine":75,"endColumn":18,"suggestions":"88"},{"ruleId":"70","severity":1,"message":"89","line":4,"column":8,"nodeType":"72","messageId":"73","endLine":4,"endColumn":13},{"ruleId":"83","severity":1,"message":"90","line":16,"column":76,"nodeType":"85","endLine":16,"endColumn":78,"suggestions":"91"},{"ruleId":"92","severity":1,"message":"93","line":19,"column":40,"nodeType":"81","endLine":19,"endColumn":63},"no-native-reassign",["94"],"no-negated-in-lhs",["95"],"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","'Online' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","Expected '!==' and instead saw '!='.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'props'. Either include it or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.","ArrayExpression",["96"],"React Hook useEffect has a missing dependency: 'props.notes.length'. Either include it or remove the dependency array.",["97"],"'axios' is defined but never used.","React Hook useEffect has missing dependencies: 'props.setIsConnected' and 'props.setIsLoading'. Either include them or remove the dependency array.",["98"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","no-global-assign","no-unsafe-negation",{"desc":"99","fix":"100"},{"desc":"101","fix":"102"},{"desc":"103","fix":"104"},"Update the dependencies array to be: [props]",{"range":"105","text":"106"},"Update the dependencies array to be: [props.notes.length, rerender]",{"range":"107","text":"108"},"Update the dependencies array to be: [props.setIsConnected, props.setIsLoading]",{"range":"109","text":"110"},[3529,3531],"[props]",[3961,3971],"[props.notes.length, rerender]",[557,559],"[props.setIsConnected, props.setIsLoading]"]